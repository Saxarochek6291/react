const quizData = [
  { question: "–ö–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –≤ Python?", answers: ["str", "float", "int", "bool"], correct: "int" },
  { question: "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤ Python?", answers: ["{}", "[]", "()", "<>"], correct: "[]" },
  { question: "–ö–∞–∫–æ–π —Ç–µ–≥ HTML –¥–µ–ª–∞–µ—Ç —Ç–µ–∫—Å—Ç –∂–∏—Ä–Ω—ã–º?", answers: ["<i>", "<p>", "<b>", "<u>"], correct: "<b>" },
  { question: "–ö–∞–∫–æ–π HTTP-–º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã?", answers: ["GET", "POST", "PUT", "DELETE"], correct: "POST" },
  { question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ CSS?", answers: ["Central Style Sheet", "Cascading Style Sheet", "Creative Style Syntax", "Computer Style System"], correct: "Cascading Style Sheet" },
  { question: "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ JavaScript?", answers: ["let", "var", "const", "–≤—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ"], correct: "–≤—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ" },
  { question: "–ö–∞–∫–æ–π —Å–∏–º–≤–æ–ª –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ Python?", answers: ["#", "//", "--", "/* */"], correct: "#" },
  { question: "–ö–∞–∫–æ–π —Ç–µ–≥ HTML —Å–æ–∑–¥–∞—ë—Ç —Å—Å—ã–ª–∫—É?", answers: ["<a>", "<link>", "<href>", "<url>"], correct: "<a>" },
  { question: "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ API —Å –ø–æ–º–æ—â—å—é fetch?", answers: ["fetch.get()", "fetch('url')", "fetch.send()", "fetch.request()"], correct: "fetch('url')" },
  { question: "–ö–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª—å Python?", answers: ["print()", "console.log()", "echo()", "write()"], correct: "print()" }
];

function QuizApp() {
  const [currentQuestion, setCurrentQuestion] = React.useState(0);
  const [score, setScore] = React.useState(0);
  const [showResult, setShowResult] = React.useState(false);
  const [selectedAnswers, setSelectedAnswers] = React.useState({});

  const handleAnswer = (selected) => {
    const newAnswers = { ...selectedAnswers, [currentQuestion]: selected };
    setSelectedAnswers(newAnswers);

    if (selected === quizData[currentQuestion].correct) {
      setScore(score + 1);
    }

    const nextQuestion = currentQuestion + 1;
    if (nextQuestion < quizData.length) {
      setCurrentQuestion(nextQuestion);
    } else {
      setShowResult(true);
    }
  };

  const restartQuiz = () => {
    setCurrentQuestion(0);
    setScore(0);
    setShowResult(false);
    setSelectedAnswers({});
  };

  return (
    <div className="container">
      {showResult ? (
        <div className="result">
          <h2>üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!</h2>
          <p>–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ <strong>{score}</strong> –∏–∑ {quizData.length} –≤–æ–ø—Ä–æ—Å–æ–≤.</p>

          <div className="answers-list">
            {quizData.map((item, index) => {
              const userAnswer = selectedAnswers[index];
              const isCorrect = userAnswer === item.correct;

              return (
                <div key={index} className="answer-item">
                  <p><strong>{index + 1}. {item.question}</strong></p>
                  <p>–í–∞—à –æ—Ç–≤–µ—Ç: <span className={isCorrect ? "correct" : "wrong"}>{userAnswer || "–ù–µ –≤—ã–±—Ä–∞–Ω–æ"}</span></p>
                  {!isCorrect && <p>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <span className="correct">{item.correct}</span></p>}
                </div>
              );
            })}
          </div>

          <button onClick={restartQuiz}>–ü—Ä–æ–π—Ç–∏ —Å–Ω–æ–≤–∞</button>
        </div>
      ) : (
        <div>
          <h2>–í–æ–ø—Ä–æ—Å {currentQuestion + 1} / {quizData.length}</h2>
          <p><strong>{quizData[currentQuestion].question}</strong></p>
          {quizData[currentQuestion].answers.map((answer, index) => (
            <button key={index} onClick={() => handleAnswer(answer)}>
              {answer}
            </button>
          ))}
        </div>
      )}
    </div>
  );
}

ReactDOM.createRoot(document.getElementById('root')).render(<QuizApp />);